# Find product by id.
db.products.find({_id: ObjectId("5f7b73bce2e457f6cd5a1c52")}, {}).pretty()


mongo db_name --quiet --eval 'DBQuery.shellBatchSize = 2000; db.users.find({}).limit(2000)' > users.json

# Update stock.
db.products.find({_id: ObjectId("5f7b737ce2e457f6cd5a1c46")}, {_id: false, storeProductQtd: true, storeProductTitle: true, updatedAt: true}).pretty();
db.products.updateOne({ _id: ObjectId("5f7b737ce2e457f6cd5a1c46")}, {$set: {storeProductQtd: 0}, $currentDate: {updatedAt: true}});


# Update dealer name.
db.products.updateOne({ _id: ObjectId("5f7b73bce2e457f6cd5a1c52")}, {$set: {dealerName: "Allnations"}, $currentDate: {updatedAt: true}});

# Find dell products with dealer code.
db.products.find({dealerName: "Dell", dealerProductId: {$exists: true}}, {dealerProductId: true}).pretty()

# Update mercadoLivreId
db.products.updateOne({ _id: ObjectId("5ef60267dfdfea1f71362716")}, {$set: {mercadoLivreId: "MLB1858913996"}, $currentDate: {updatedAt: true}});
db.products.updateOne({ _id: ObjectId("5ef60267dfdfea1f71362716")}, {$set: {mercadoLivreId: ""}, $currentDate: {updatedAt: true}});

# Find with meli product filter.
db.products.find({_id: ObjectId("60df0e700f4d9007778aa143")}, { storeProductTitle: true, mercadoLivreId: true }).pretty()
